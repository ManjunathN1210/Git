Version control system is a system that records to a file or a set of files over the time so that you can recall specific versions later.

Advantage of Version control system is that it allows you to revert back to a previous state, review changes made over time, see who last modified something that might be causing the problem, who introduced an issue, when and where.

In simple if we screw up something with files, we can also recover it back.

Git is an open-source version control system created by Linus Torvalds in 2005. It is a Distributed Version Control System.

Git does not rely on a central server to store all version's of its project files. Instead every user clones a copy of the repository (collection of files) and has the full history of their project on their own hard drive.

A repository is referred to as a collection of files.

Following Steps are used while working with GIT :- 

Step 1:- git init :- It is used to initialize empty git repository.

Step 2:- git status :- It is used to check the status of the git state of the working directory.

Step 3:- git add <file_name> :- It is used to add the files into the git repository.

Step 4:- git commit -m "Message" :- It is used to identify the reason for the commit into repository.

// git adds the file in the create mode with a specific file permission. Here it refers to Normal File.
// Other options are :- 100755, 100644
Step 5:- git log :- It is used to get the log information of all the commits staged in the repository. It gives us the log information according to the recent commits made.

Step 6:- git restore --staged <file> :- It is used to restore a staged file that was added previously using git add.

Step 7:- git reset <hash_id> :- It is used to remove or unstage the commits that were performed.

Step 8:- git stash :- It is used to save the working directory which are staged but not required now to commit.

Step 9:- git stash pop :- It is used to roll back the changes the which were made and kept in stage.

Step 10:- git stash clear :- It is used to clear all the unstaged commits that were saved from the working directory.

Step 11:- git remote add origin <url> :- It is used to add the github repository to the local git project. (remote refers that we are working with URL's). (origin indicates the name of the URL we are going to add). Rather than remembering the whole phone number we just remember it through the name, same way here we are using origin to indicate the URL.

Step 12:- git remote -v :- It is used to get all the URL's that are attached to the folder.

Step 13:- git push origin master :- It is used to push the local repository to Github.

Step 14:- git branch <new_branch> :- It is used to create a new branch.

Step 15:- git checkout <new_branch> :- It is used to checkout or switch to the new_branch created from main(master) branch.

Step 16:- git remote add upstream <url> :- It is used to add the url of the repository which you have forked from.

Step 17:- git fetch --all --prune :- It is used to fetch all the main account commits committed by some account which forked it into main account.

Step 18:- git reset --hard upstream/main :- Once pull request is made we can directly push contents to that repository.

Step 19:- git rebase -i <hash_id> :- It is used to merge two or more commits. -i refers to interactive.

Step 20:- git push origin upstream/main :- It is going to push all the commits from local repo to the forked repo url.
